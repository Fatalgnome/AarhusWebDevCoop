@inherits Umbraco.Web.Macros.PartialViewMacroPage
@using Umbraco.Web



@{ 
                    
var selection = Model.Content.Site().Children.Where(x => x.IsVisible()).ToArray();

var selectProjects =     Model.Content.Site().Children
                        .Where(x => x.DocumentTypeAlias == "projectsOverview").First().Children
                        .Where(x => x.IsVisible())
                        .Where(x => x.HasValue("projectStatus")
                        && Umbraco.GetPreValueAsString(x.GetPropertyValue<int>("projectStatus")) == "Completed").ToArray();
}

<nav class="navbar navbar-expand-lg navbar-light bg-light">
  <a class="navbar-brand" href="/">AarhusWebDevCoop</a>
  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>

  <div class="collapse navbar-collapse" id="navbarSupportedContent">
    <ul class="navbar-nav mr-auto">
        
            @foreach(var menuItem in selection)
            {
                var isProtected = umbraco.library.IsProtected(menuItem.Id, menuItem.Path);
                var loginAccess = isProtected && umbraco.library.HasAccess(menuItem.Id, menuItem.Path);

                if (!isProtected || loginAccess)
                {
                    <li class="nav-item active @(menuItem.IsAncestorOrSelf(Model.Content) ? "active": null)">
                    <a class="nav-link" href="@menuItem.Url">@menuItem.Name</a></li>
                }
            }

        
      <li class="nav-item dropdown active">
        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
          Our Projects
        </a>
        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
        @if (selectProjects.Length > 0)
        {
            foreach(var item in selectProjects)
            {
                var isProtected = umbraco.library.IsProtected(item.Id, item.Path);
                var loginAccess= isProtected && umbraco.library.HasAccess(item.Id, item.Path);

                if(!isProtected || loginAccess)
                {
                    <a class="dropdown-item" href="@item.Url">@item.Name</a>
                }
            }
        }
        
        </div>
      </li>
    </ul>
    <form class="form-inline my-2 my-lg-0">
      <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
      <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
    </form>
  </div>
</nav>